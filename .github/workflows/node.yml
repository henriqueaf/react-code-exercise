# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Config environment variables
        run: |
          echo "REACT_APP_GOOGLE_MAPS_API_KEY=\"${google_maps_api_key}\"" >> .env
          echo "REACT_APP_MEMBERS_API_KEY=\"${members_api_key}\"" >> .env
        env:
          google_maps_api_key: ${{ secrets.REACT_APP_GOOGLE_MAPS_API_KEY }}
          members_api_key: ${{ secrets.REACT_APP_MEMBERS_API_KEY }}

      - name: Install dependencies
        run: yarn install

      - name: Execute tests
        run: yarn test --watchAll=false

      - name: Deploy
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.name $user_name
          git config --global user.email $user_email
          git remote set-url origin https://${github_token}@github.com/${repository}
          yarn run deploy
        env:
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          github_token: ${{ secrets.ACTIONS_DEPLOY_ACCESS_TOKEN }}
          repository: ${{ github.repository }}
